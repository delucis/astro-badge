---
import CTA from "../components/CTA.astro";
import Frame from "../components/Frame.astro";
import Layout from "../layouts/Layout.astro";
import { contributors } from '../util/getContributors'

const sortedUsernames = contributors.map(c => c.username);

const title = 'Astro Contributors';
const description = 'Find an Astro contributor and check out their awesome work!';
const dataID = 'contributor-usernames';
---

<Layout {title} {description}>
  <div class="flex flex-col gap-6">
    <div class="flex flex-col gap-4">
      <h1 class="heading-3 text-white">{title}</h1>
      <div>
        <p>
          Show off your own or celebrate an Astro contributor‚Äôs achievements!
        </p>
        <p>
          Enter a GitHub username to show that user‚Äôs contributions to repositories in <a class="link-underline" href="https://github.com/withastro/">the <code>withastro</code> org</a>.
        </p>
      </div>
    </div>

    <Frame>
      <form onsubmit="return false" class="flex flex-col gap-4 sm:gap-8">
        <label for="find-contributor" class="heading-5 text-white">
          Find an Astro contributor
        </label>
        <div class="relative">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" class="absolute left-3 inset-y-3 w-4">
            <path class="fill-neutral-200" d="M12.66 11.84 10.5 9.69a5.25 5.25 0 1 0-.81.81l2.15 2.15a.58.58 0 0 0 .82 0 .58.58 0 0 0 0-.81ZM6.42 10.5a4.08 4.08 0 1 1 0-8.17 4.08 4.08 0 0 1 0 8.17Z"/>
          </svg>
          <input type="text" id="find-contributor" placeholder="GitHub username" list={dataID} autocomplete="off" class="w-full input pl-10 text-white text-sm leading-4 placeholder:text-neutral-200">
        </div>
      </form>

      <div class="grid gap-4 place-content-center pb-6 pt-10 sm:pt-14 rounded-lg sm:border sm:border-neutral-500 sm:bg-neutral-600">
        <div id="svg-display" class="w-[260px] max-w-full [&>*]:aspect-[5/3] [&>*]:shadow-lg">
          <img src="/v2/contributor-placeholder.svg" alt="">
        </div>
    
        <p id="more-link" class="text-center text-sm [&>a]:inline-block [&>a]:text-accent-300 [&>a]:hover:-translate-y-0.5 [&>a]:hover:text-accent-200 [&>a]:motion-safe:transition-all">&nbsp;</p>
      </div>

      <div class="text-center text-neutral-200">
        <p>Astro has {Intl.NumberFormat().format(contributors.length)} contributors! üßë‚ÄçüöÄüíú</p>
        <p>Data is updated once per day at midnight GMT.</p>
      </div>
    </Frame>
    
    <footer>
      <div class="">
        <CTA href="/v1/achievements/">Browse achievements ‚Üí</CTA>
      </div>
    </footer>
  </div>

  <datalist id={dataID}>
    {sortedUsernames.map(username =>
    <option value={username} />)}
  </datalist>
</Layout>

<script>
  const searchBox = document.getElementById('find-contributor') as HTMLInputElement;
  const svgDisplay = document.getElementById('svg-display') as HTMLDivElement;
  const moreP = document.getElementById('more-link') as HTMLParagraphElement;

  let to: NodeJS.Timeout;

  const resetSvg = () => {
    svgDisplay.innerHTML = '<img src="/v2/contributor-placeholder.svg" alt="">';
    svgDisplay.classList.remove('animate-pulse');
  }

  searchBox.addEventListener('input', async () => {
    if (to) {
      clearTimeout(to);
      to = null;
    }
    svgDisplay.classList.add('animate-pulse')
    moreP.innerHTML = '&nbsp;';
    to = setTimeout(async () => {
      const username = searchBox.value;
      try {
        if (!username) return resetSvg();
        const imageSrc = new URL(`/v2/contributor/${username}.svg`, window.location.href);
        const moreHref = new URL(`/v1/contributor/${username}/`, window.location.href);
        const res = await fetch(imageSrc.href, { method: 'HEAD' });
        resetSvg();
        if (res.ok) {
          svgDisplay.innerHTML = `<img src="${imageSrc.href}" alt="@${username} Astro contributions">`;
          moreP.innerHTML = `<a href="${moreHref}">More about this contributor ‚Üí</a>`;
        } else {
          throw new Error('Contributor not found!');
        }
      } catch (error: unknown) {
        resetSvg();
        moreP.innerHTML = `<span>${error instanceof Error ? error.message : error}</span>`;
      }
    }, 200);
  });
</script>
