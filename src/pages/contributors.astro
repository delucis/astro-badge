---
import CTA from "../components/CTA.astro";
import Layout from "../layouts/Layout.astro";
import { contributors } from '../util/getContributors'

const sortedUsernames = contributors.map(c => c.username);

const title = 'Astro Contributors';
const description = 'Find an Astro contributor and check out their awesome work!';
const dataID = 'contributor-usernames';
---

<Layout {title} {description}>
  <div class="prose prose-invert prose-a:text-accent-300 mx-auto">
    <h1>{title}</h1>

    <p>
      Show off your own or celebrate an Astro contributor‚Äôs achievements!
    </p>

    <p>
      Enter a GitHub username to show that user‚Äôs contributions to repositories in <a href="https://github.com/withastro/">the <code>withastro</code> org</a>.
    </p>
  </div>

  <div class="my-12 grid gap-2 place-content-center">
    <form onsubmit="return false" class="bg-neutral-800 p-2 rounded-lg">
      <label for="find-contributor" class="uppercase text-sm tracking-wide font-semibold block mb-2">
        Find an Astro contributor
      </label>
      <input type="text" id="find-contributor" placeholder="GitHub username" list={dataID} autocomplete="off" class="p-2 w-full text-neutral-800 rounded-md">
    </form>

    <div id="svg-display" class="w-[300px] h-[200px] mx-auto grid place-content-center rounded-3xl bg-neutral-800 text-neutral-400">
      Enter a username
    </div>

    <p id="more-link" class="text-center text-accent-300 hover:-translate-y-0.5 hover:text-accent-200 motion-safe:transition-all">&nbsp;</p>
  </div>
  
  <footer class="mx-auto max-w-prose">
    <p>One of {contributors.length} contributors! üßë‚ÄçüöÄüíú</p>
    <small>Data is updated once per day at midnight GMT.</small>

    <div class="my-24">
      <CTA href="/v1/achievements/">Browse achievements ‚Üí</CTA>
    </div>
  </footer>

  <datalist id={dataID}>
    {sortedUsernames.map(username =>
    <option value={username} />)}
  </datalist>
</Layout>

<script>
  const searchBox = document.getElementById('find-contributor') as HTMLInputElement;
  const svgDisplay = document.getElementById('svg-display') as HTMLDivElement;
  const moreP = document.getElementById('more-link') as HTMLParagraphElement;

  let to: NodeJS.Timeout;

  searchBox.addEventListener('input', async () => {
    if (to) {
      clearTimeout(to);
      to = null;
    }
    svgDisplay.innerHTML = `<p>Searching‚Ä¶</p>`;
    moreP.innerHTML = '&nbsp;';
    to = setTimeout(async () => {
      const username = searchBox.value;
      try {
        if (!username) throw new Error('Enter a username')
        const imageSrc = new URL(`/v1/contributor/${username}.svg`, window.location.href);
        const moreHref = new URL(`/v1/contributor/${username}/`, window.location.href);
        const res = await fetch(imageSrc.href, { method: 'HEAD' });
        if (res.ok) {
          svgDisplay.innerHTML = `<img src="${imageSrc.href}">`;
          moreP.innerHTML = `<a href="${moreHref}">More about this contributor ‚Üí</a>`;
        } else {
          throw new Error('Contributor not found!');
        }
      } catch (error: unknown) {
        svgDisplay.innerHTML = `<p>${error instanceof Error ? error.message : error}</p>`;
      }
    }, 200);
  });
</script>
